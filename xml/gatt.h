
/*
 *	This file was automatically generated by dbusxx-xml2cpp; DO NOT EDIT!
 */

#ifndef __dbusxx__gatt_h__PROXY_MARSHAL_H
#define __dbusxx__gatt_h__PROXY_MARSHAL_H

#include <dbus-c++/dbus.h>
#include <cassert>

namespace com {
namespace bluegiga {
namespace v2 {
namespace bt {

class gatt_proxy
: public ::DBus::InterfaceProxy
{
public:

    gatt_proxy()
    : ::DBus::InterfaceProxy("com.bluegiga.v2.bt.gatt")
    {
        connect_signal(gatt_proxy, CentralCfm, _CentralCfm_stub);
        connect_signal(gatt_proxy, PeripheralCfm, _PeripheralCfm_stub);
        connect_signal(gatt_proxy, BredrConnectCfm, _BredrConnectCfm_stub);
        connect_signal(gatt_proxy, BredrAcceptCfm, _BredrAcceptCfm_stub);
        connect_signal(gatt_proxy, ConnectInd, _ConnectInd_stub);
        connect_signal(gatt_proxy, DisconnectInd, _DisconnectInd_stub);
        connect_signal(gatt_proxy, ScanCfm, _ScanCfm_stub);
        connect_signal(gatt_proxy, AdvertiseCfm, _AdvertiseCfm_stub);
        connect_signal(gatt_proxy, RegisterCfm, _RegisterCfm_stub);
        connect_signal(gatt_proxy, UnregisterCfm, _UnregisterCfm_stub);
        connect_signal(gatt_proxy, DbAllocCfm, _DbAllocCfm_stub);
        connect_signal(gatt_proxy, DbDeallocCfm, _DbDeallocCfm_stub);
        connect_signal(gatt_proxy, DbAddCfm, _DbAddCfm_stub);
        connect_signal(gatt_proxy, DbRemoveCfm, _DbRemoveCfm_stub);
        connect_signal(gatt_proxy, DbAccessReadInd, _DbAccessReadInd_stub);
        connect_signal(gatt_proxy, DbAccessWriteInd, _DbAccessWriteInd_stub);
        connect_signal(gatt_proxy, DbAccessCompleteInd, _DbAccessCompleteInd_stub);
        connect_signal(gatt_proxy, EventSendCfm, _EventSendCfm_stub);
        connect_signal(gatt_proxy, MtuChangedInd, _MtuChangedInd_stub);
        connect_signal(gatt_proxy, DiscoverServicesInd, _DiscoverServicesInd_stub);
        connect_signal(gatt_proxy, DiscoverServicesCfm, _DiscoverServicesCfm_stub);
        connect_signal(gatt_proxy, FindInclServicesInd, _FindInclServicesInd_stub);
        connect_signal(gatt_proxy, FindInclServicesCfm, _FindInclServicesCfm_stub);
        connect_signal(gatt_proxy, DiscoverCharacInd, _DiscoverCharacInd_stub);
        connect_signal(gatt_proxy, DiscoverCharacCfm, _DiscoverCharacCfm_stub);
        connect_signal(gatt_proxy, DiscoverCharacDescriptorsInd, _DiscoverCharacDescriptorsInd_stub);
        connect_signal(gatt_proxy, DiscoverCharacDescriptorsCfm, _DiscoverCharacDescriptorsCfm_stub);
        connect_signal(gatt_proxy, ReadCfm, _ReadCfm_stub);
        connect_signal(gatt_proxy, ReadExtendedPropertiesCfm, _ReadExtendedPropertiesCfm_stub);
        connect_signal(gatt_proxy, ReadUserDescriptionCfm, _ReadUserDescriptionCfm_stub);
        connect_signal(gatt_proxy, ReadClientConfigurationCfm, _ReadClientConfigurationCfm_stub);
        connect_signal(gatt_proxy, ReadServerConfigurationCfm, _ReadServerConfigurationCfm_stub);
        connect_signal(gatt_proxy, ReadPresentationFormatCfm, _ReadPresentationFormatCfm_stub);
        connect_signal(gatt_proxy, ReadAggregateFormatCfm, _ReadAggregateFormatCfm_stub);
        connect_signal(gatt_proxy, ReadProfileDefinedDescriptorCfm, _ReadProfileDefinedDescriptorCfm_stub);
        connect_signal(gatt_proxy, ReadMultiCfm, _ReadMultiCfm_stub);
        connect_signal(gatt_proxy, ReadByUuidInd, _ReadByUuidInd_stub);
        connect_signal(gatt_proxy, ReadByUuidCfm, _ReadByUuidCfm_stub);
        connect_signal(gatt_proxy, WriteCfm, _WriteCfm_stub);
        connect_signal(gatt_proxy, NotificationInd, _NotificationInd_stub);
        connect_signal(gatt_proxy, ParamScanCfm, _ParamScanCfm_stub);
        connect_signal(gatt_proxy, ParamAdvertiseCfm, _ParamAdvertiseCfm_stub);
        connect_signal(gatt_proxy, ParamConnectionCfm, _ParamConnectionCfm_stub);
        connect_signal(gatt_proxy, ParamConnUpdateCfm, _ParamConnUpdateCfm_stub);
        connect_signal(gatt_proxy, WhitelistAddCfm, _WhitelistAddCfm_stub);
        connect_signal(gatt_proxy, WhitelistClearCfm, _WhitelistClearCfm_stub);
        connect_signal(gatt_proxy, WhitelistReadCfm, _WhitelistReadCfm_stub);
        connect_signal(gatt_proxy, ServiceChangedInd, _ServiceChangedInd_stub);
        connect_signal(gatt_proxy, SubscriptionCfm, _SubscriptionCfm_stub);
        connect_signal(gatt_proxy, SetEventMaskCfm, _SetEventMaskCfm_stub);
        connect_signal(gatt_proxy, PhysicalLinkStatusInd, _PhysicalLinkStatusInd_stub);
        connect_signal(gatt_proxy, WhitelistChangeInd, _WhitelistChangeInd_stub);
        connect_signal(gatt_proxy, ReportInd, _ReportInd_stub);
        connect_signal(gatt_proxy, SecurityCfm, _SecurityCfm_stub);
    }

public:

    /* properties exported by this interface */
public:

    /* methods exported by this interface,
     * this functions will invoke the corresponding methods on the remote objects
     */
    void CentralReq(const uint32_t& gattId, const std::string& address, const uint32_t& flags, const uint16_t& preferredMtu)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << address;
        wi << flags;
        wi << preferredMtu;
        call.member("CentralReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void PeripheralReq(const uint32_t& gattId, const std::string& address, const uint32_t& flags, const uint16_t& preferredMtu)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << address;
        wi << flags;
        wi << preferredMtu;
        call.member("PeripheralReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void PeripheralReqData(const uint32_t& gattId, const std::string& address, const uint32_t& flags, const std::vector< uint8_t >& advertisingData, const std::vector< uint8_t >& scanResponseData, const uint16_t& preferredMtu)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << address;
        wi << flags;
        wi << advertisingData;
        wi << scanResponseData;
        wi << preferredMtu;
        call.member("PeripheralReqData");
        ::DBus::Message ret = invoke_method (call);
    }

    void BredrConnectReq(const uint32_t& gattId, const std::string& address, const uint32_t& flags)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << address;
        wi << flags;
        call.member("BredrConnectReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void BredrAcceptReq(const uint32_t& gattId, const uint32_t& flags)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << flags;
        call.member("BredrAcceptReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void DisconnectReq(const uint32_t& gattId, const uint32_t& btConnId)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << btConnId;
        call.member("DisconnectReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void RegisterReq(const uint16_t& context)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << context;
        call.member("RegisterReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void UnregisterReq(const uint32_t& gattId)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        call.member("UnregisterReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void DbAllocReq(const uint32_t& gattId, const uint16_t& numOfAttrHandles, const uint16_t& preferredStartHandle)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << numOfAttrHandles;
        wi << preferredStartHandle;
        call.member("DbAllocReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void DbDeallocReq(const uint32_t& gattId)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        call.member("DbDeallocReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void DbRemoveReq(const uint32_t& gattId, const uint16_t& start, const uint16_t& end)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << start;
        wi << end;
        call.member("DbRemoveReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void FindInclServicesReq(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& startHandle, const uint16_t& endGroupHandle)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << btConnId;
        wi << startHandle;
        wi << endGroupHandle;
        call.member("FindInclServicesReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void ReadReq(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& handle, const uint16_t& offset)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << btConnId;
        wi << handle;
        wi << offset;
        call.member("ReadReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void ReadLocalReq(const uint32_t& gattId, const uint16_t& handle)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << handle;
        call.member("ReadLocalReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void ReadExtendedPropertiesReq(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& handle)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << btConnId;
        wi << handle;
        call.member("ReadExtendedPropertiesReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void ReadExtendedPropertiesLocalReq(const uint32_t& gattId, const uint16_t& handle)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << handle;
        call.member("ReadExtendedPropertiesLocalReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void ReadUserDescriptionReq(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& handle)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << btConnId;
        wi << handle;
        call.member("ReadUserDescriptionReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void ReadUserDescriptionLocalReq(const uint32_t& gattId, const uint16_t& handle)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << handle;
        call.member("ReadUserDescriptionLocalReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void ReadMultiReq(const uint32_t& gattId, const uint32_t& btConnId, const std::vector< uint16_t >& handles)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << btConnId;
        wi << handles;
        call.member("ReadMultiReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void WriteReq(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& handle, const uint16_t& offset, const std::vector< uint8_t >& value)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << btConnId;
        wi << handle;
        wi << offset;
        wi << value;
        call.member("WriteReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void WriteLocalReq(const uint32_t& gattId, const uint16_t& handle, const std::vector< uint8_t >& value)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << handle;
        wi << value;
        call.member("WriteLocalReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void WriteClientConfigurationReq(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& clientConfigHandle, const uint16_t& valueHandle, const uint16_t& configuration)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << btConnId;
        wi << clientConfigHandle;
        wi << valueHandle;
        wi << configuration;
        call.member("WriteClientConfigurationReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void CancelReq(const uint32_t& gattId, const uint32_t& btConnId)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << btConnId;
        call.member("CancelReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void ParamScanReq(const uint32_t& gattId, const uint16_t& scanInterval, const uint16_t& scanWindow)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << scanInterval;
        wi << scanWindow;
        call.member("ParamScanReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void ParamAdvertiseReq(const uint32_t& gattId, const uint16_t& advIntervalMin, const uint16_t& advIntervalMax, const uint8_t& advertisingChannelMap)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << advIntervalMin;
        wi << advIntervalMax;
        wi << advertisingChannelMap;
        call.member("ParamAdvertiseReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void ParamConnectionReq(const uint32_t& gattId, const uint16_t& scanInterval, const uint16_t& scanWindow, const uint16_t& connIntervalMin, const uint16_t& connIntervalMax, const uint16_t& connLatency, const uint16_t& supervisionTimeout, const uint16_t& connAttemptTimeout, const uint16_t& advIntervalMin, const uint16_t& advIntervalMax, const uint16_t& connLatencyMax, const uint16_t& supervisionTimeoutMin, const uint16_t& supervisionTimeoutMax)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << scanInterval;
        wi << scanWindow;
        wi << connIntervalMin;
        wi << connIntervalMax;
        wi << connLatency;
        wi << supervisionTimeout;
        wi << connAttemptTimeout;
        wi << advIntervalMin;
        wi << advIntervalMax;
        wi << connLatencyMax;
        wi << supervisionTimeoutMin;
        wi << supervisionTimeoutMax;
        call.member("ParamConnectionReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void ParamConnUpdateReq(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& connIntervalMin, const uint16_t& connIntervalMax, const uint16_t& connLatency, const uint16_t& supervisionTimeout, const uint16_t& minimumCeLength, const uint16_t& maximumCeLength)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << btConnId;
        wi << connIntervalMin;
        wi << connIntervalMax;
        wi << connLatency;
        wi << supervisionTimeout;
        wi << minimumCeLength;
        wi << maximumCeLength;
        call.member("ParamConnUpdateReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void WhitelistAddReq(const uint32_t& gattId, const std::vector< std::string >& address)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << address;
        call.member("WhitelistAddReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void WhitelistClearReq(const uint32_t& gattId)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        call.member("WhitelistClearReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void WhitelistReadReq(const uint32_t& gattId)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        call.member("WhitelistReadReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void SetEventMaskReq(const uint32_t& gattId, const uint32_t& eventMask)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << eventMask;
        call.member("SetEventMaskReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void DiscoverAllPrimaryServicesReq(const uint32_t& gattId, const uint32_t& btConnId)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << btConnId;
        call.member("DiscoverAllPrimaryServicesReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void DiscoverAllPrimaryServicesLocalReq(const uint32_t& gattId)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        call.member("DiscoverAllPrimaryServicesLocalReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void DiscoverAllCharacOfAServiceReq(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& startHandle, const uint16_t& endHandle)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << btConnId;
        wi << startHandle;
        wi << endHandle;
        call.member("DiscoverAllCharacOfAServiceReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void DiscoverAllCharacOfAServiceLocalReq(const uint32_t& gattId, const uint16_t& startHandle, const uint16_t& endHandle)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << startHandle;
        wi << endHandle;
        call.member("DiscoverAllCharacOfAServiceLocalReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void ReadClientConfigurationReq(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& handle)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << btConnId;
        wi << handle;
        call.member("ReadClientConfigurationReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void ReadServerConfigurationReq(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& handle)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << btConnId;
        wi << handle;
        call.member("ReadServerConfigurationReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void ReadServerConfigurationLocalReq(const uint32_t& gattId, const uint16_t& handle)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << handle;
        call.member("ReadServerConfigurationLocalReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void ReadPresentationFormatReq(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& handle)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << btConnId;
        wi << handle;
        call.member("ReadPresentationFormatReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void ReadPresentationFormatLocalReq(const uint32_t& gattId, const uint16_t& handle)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << handle;
        call.member("ReadPresentationFormatLocalReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void ReadAggregateFormatReq(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& handle)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << btConnId;
        wi << handle;
        call.member("ReadAggregateFormatReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void ReadAggregateFormatLocalReq(const uint32_t& gattId, const uint16_t& handle)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << handle;
        call.member("ReadAggregateFormatLocalReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void ReadProfileDefinedDescriptorReq(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& handle, const uint16_t& offset)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << btConnId;
        wi << handle;
        wi << offset;
        call.member("ReadProfileDefinedDescriptorReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void ReadProfileDefinedDescriptorLocalReq(const uint32_t& gattId, const uint16_t& handle)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << handle;
        call.member("ReadProfileDefinedDescriptorLocalReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void WriteCmdReq(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& handle, const std::vector< uint8_t >& value)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << btConnId;
        wi << handle;
        wi << value;
        call.member("WriteCmdReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void WriteSignedCmdReq(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& handle, const std::vector< uint8_t >& value)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << btConnId;
        wi << handle;
        wi << value;
        call.member("WriteSignedCmdReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void ReliableWritesReq(const uint32_t& gattId, const uint32_t& btConnId, const std::vector< ::DBus::Struct< uint16_t, uint16_t, std::vector< uint8_t > > >& attrWritePairs)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << btConnId;
        wi << attrWritePairs;
        call.member("ReliableWritesReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void WriteUserDescriptionReq(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& handle, const std::string& utf8String)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << btConnId;
        wi << handle;
        wi << utf8String;
        call.member("WriteUserDescriptionReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void WriteUserDescriptionLocalReq(const uint32_t& gattId, const uint16_t& handle, const std::string& utf8String)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << handle;
        wi << utf8String;
        call.member("WriteUserDescriptionLocalReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void WriteServerConfigurationReq(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& handle, const uint16_t& configBits)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << btConnId;
        wi << handle;
        wi << configBits;
        call.member("WriteServerConfigurationReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void WriteServerConfigurationLocalReq(const uint32_t& gattId, const uint16_t& handle, const uint16_t& configBits)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << handle;
        wi << configBits;
        call.member("WriteServerConfigurationLocalReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void WriteProfileDefinedDescriptorReq(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& handle, const uint16_t& offset, const std::vector< uint8_t >& value)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << btConnId;
        wi << handle;
        wi << offset;
        wi << value;
        call.member("WriteProfileDefinedDescriptorReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void WriteProfileDefinedDescriptorLocalReq(const uint32_t& gattId, const uint16_t& handle, const std::vector< uint8_t >& value)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << handle;
        wi << value;
        call.member("WriteProfileDefinedDescriptorLocalReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void SubscribeReq(const uint32_t& gattId, const std::string& address, const uint16_t& handle)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << address;
        wi << handle;
        call.member("SubscribeReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void UnsubscribeReq(const uint32_t& gattId, const std::string& address, const uint16_t& handle)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << address;
        wi << handle;
        call.member("UnsubscribeReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void ScanReqStop(const uint32_t& gattId)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        call.member("ScanReqStop");
        ::DBus::Message ret = invoke_method (call);
    }

    void ScanReqStart(const uint32_t& gattId, const uint8_t& flags)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << flags;
        call.member("ScanReqStart");
        ::DBus::Message ret = invoke_method (call);
    }

    void AdvertiseReqStart(const uint32_t& gattId)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        call.member("AdvertiseReqStart");
        ::DBus::Message ret = invoke_method (call);
    }

    void AdvertiseReqStartData(const uint32_t& gattId, const uint32_t& advFlags, const std::vector< uint8_t >& advData, const std::vector< uint8_t >& scanRspData)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << advFlags;
        wi << advData;
        wi << scanRspData;
        call.member("AdvertiseReqStartData");
        ::DBus::Message ret = invoke_method (call);
    }

    void AdvertiseReqStop(const uint32_t& gattId)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        call.member("AdvertiseReqStop");
        ::DBus::Message ret = invoke_method (call);
    }

    void DiscoverAllCharacDescriptorsReq(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& startHandle, const uint16_t& endHandle)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << btConnId;
        wi << startHandle;
        wi << endHandle;
        call.member("DiscoverAllCharacDescriptorsReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void SecurityReq(const uint32_t& gattId, const uint32_t& btConnId, const uint32_t& secRequirements)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << btConnId;
        wi << secRequirements;
        call.member("SecurityReq");
        ::DBus::Message ret = invoke_method (call);
    }


public:

    /* signal handlers for this interface
     */
    virtual void CentralCfm(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& resultCode, const uint16_t& resultSupplier) = 0;
    virtual void PeripheralCfm(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& resultCode, const uint16_t& resultSupplier) = 0;
    virtual void BredrConnectCfm(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& resultCode, const uint16_t& resultSupplier) = 0;
    virtual void BredrAcceptCfm(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& resultCode, const uint16_t& resultSupplier) = 0;
    virtual void ConnectInd(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& resultCode, const uint16_t& resultSupplier, const uint32_t& connInfo, const std::string& address, const uint16_t& mtu) = 0;
    virtual void DisconnectInd(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& reasonCode, const uint16_t& reasonSupplier, const std::string& address, const uint32_t& connInfo) = 0;
    virtual void ScanCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier) = 0;
    virtual void AdvertiseCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier) = 0;
    virtual void RegisterCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier, const uint16_t& context) = 0;
    virtual void UnregisterCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier) = 0;
    virtual void DbAllocCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier, const uint16_t& start, const uint16_t& end, const uint16_t& preferredStartHandle) = 0;
    virtual void DbDeallocCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier, const uint16_t& start, const uint16_t& end) = 0;
    virtual void DbAddCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier) = 0;
    virtual void DbRemoveCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier, const uint16_t& numOfAttr) = 0;
    virtual void DbAccessReadInd(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& attrHandle, const uint16_t& offset, const uint16_t& maxRspValueLength, const uint16_t& check, const uint32_t& connInfo, const std::string& address) = 0;
    virtual void DbAccessWriteInd(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& check, const uint32_t& connInfo, const std::string& address, const std::vector< ::DBus::Struct< uint16_t, std::vector< uint8_t > > >& writeUnit, const uint16_t& attrHandle) = 0;
    virtual void DbAccessCompleteInd(const uint32_t& gattId, const uint32_t& btConnId, const uint32_t& connInfo, const std::string& address, const uint16_t& attrHandle, const bool& commit) = 0;
    virtual void EventSendCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier, const uint32_t& btConnId) = 0;
    virtual void MtuChangedInd(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& mtu) = 0;
    virtual void DiscoverServicesInd(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& startHandle, const uint16_t& endHandle, const std::vector< uint8_t >& uuid) = 0;
    virtual void DiscoverServicesCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier, const uint32_t& btConnId) = 0;
    virtual void FindInclServicesInd(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& attrHandle, const uint16_t& startHandle, const uint16_t& endGroupHandle, const std::vector< uint8_t >& uuid) = 0;
    virtual void FindInclServicesCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier, const uint32_t& btConnId) = 0;
    virtual void DiscoverCharacInd(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& declarationHandle, const uint8_t& property, const std::vector< uint8_t >& uuid, const uint16_t& valueHandle) = 0;
    virtual void DiscoverCharacCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier, const uint32_t& btConnId) = 0;
    virtual void DiscoverCharacDescriptorsInd(const uint32_t& gattId, const uint32_t& btConnId, const std::vector< uint8_t >& uuid, const uint16_t& descriptorHandle) = 0;
    virtual void DiscoverCharacDescriptorsCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier, const uint32_t& btConnId) = 0;
    virtual void ReadCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier, const uint32_t& btConnId, const std::vector< uint8_t >& value) = 0;
    virtual void ReadExtendedPropertiesCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier, const uint32_t& btConnId, const uint16_t& extProperties) = 0;
    virtual void ReadUserDescriptionCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier, const uint32_t& btConnId, const std::string& usrDescription) = 0;
    virtual void ReadClientConfigurationCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier, const uint32_t& btConnId, const uint16_t& configuration) = 0;
    virtual void ReadServerConfigurationCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier, const uint32_t& btConnId, const uint16_t& configuration) = 0;
    virtual void ReadPresentationFormatCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier, const uint32_t& btConnId, const uint8_t& format, const uint8_t& exponent, const uint16_t& unit, const uint8_t& nameSpace, const uint16_t& description) = 0;
    virtual void ReadAggregateFormatCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier, const uint32_t& btConnId, const std::vector< uint16_t >& handles) = 0;
    virtual void ReadProfileDefinedDescriptorCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier, const uint32_t& btConnId, const std::vector< uint8_t >& value) = 0;
    virtual void ReadMultiCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier, const uint32_t& btConnId, const std::vector< uint8_t >& value) = 0;
    virtual void ReadByUuidInd(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& valueHandle, const std::vector< uint8_t >& value) = 0;
    virtual void ReadByUuidCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier, const uint32_t& btConnId) = 0;
    virtual void WriteCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier, const uint32_t& btConnId) = 0;
    virtual void NotificationInd(const uint32_t& gattId, const uint32_t& btConnId, const std::string& address, const uint16_t& valueHandle, const std::vector< uint8_t >& value, const uint32_t& connInfo) = 0;
    virtual void ParamScanCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier) = 0;
    virtual void ParamAdvertiseCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier) = 0;
    virtual void ParamConnectionCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier) = 0;
    virtual void ParamConnUpdateCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier, const uint32_t& btConnId) = 0;
    virtual void WhitelistAddCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier) = 0;
    virtual void WhitelistClearCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier) = 0;
    virtual void WhitelistReadCfm(const uint32_t& gattId, const std::vector< std::string >& address) = 0;
    virtual void ServiceChangedInd(const uint32_t& gattId, const std::string& address, const uint16_t& startHandle, const uint16_t& endHandle, const uint32_t& connInfo) = 0;
    virtual void SubscriptionCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier) = 0;
    virtual void SetEventMaskCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier) = 0;
    virtual void PhysicalLinkStatusInd(const uint32_t& gattId, const std::string& address, const uint32_t& connInfo, const bool& status) = 0;
    virtual void WhitelistChangeInd(const uint32_t& gattId) = 0;
    virtual void ReportInd(const uint32_t& gattId, const uint8_t& eventType, const std::string& address, const std::string& permanentAddress, const std::vector< uint8_t >& data, const int16_t& rssi) = 0;
    virtual void SecurityCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier, const uint32_t& btConnId) = 0;

private:

    /* unmarshalers (to unpack the DBus message before calling the actual signal handler)
     */
    void _CentralCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint32_t btConnId;
        ri >> btConnId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        CentralCfm(gattId, btConnId, resultCode, resultSupplier);
    }
    void _PeripheralCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint32_t btConnId;
        ri >> btConnId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        PeripheralCfm(gattId, btConnId, resultCode, resultSupplier);
    }
    void _BredrConnectCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint32_t btConnId;
        ri >> btConnId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        BredrConnectCfm(gattId, btConnId, resultCode, resultSupplier);
    }
    void _BredrAcceptCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint32_t btConnId;
        ri >> btConnId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        BredrAcceptCfm(gattId, btConnId, resultCode, resultSupplier);
    }
    void _ConnectInd_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint32_t btConnId;
        ri >> btConnId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        uint32_t connInfo;
        ri >> connInfo;
        std::string address;
        ri >> address;
        uint16_t mtu;
        ri >> mtu;
        ConnectInd(gattId, btConnId, resultCode, resultSupplier, connInfo, address, mtu);
    }
    void _DisconnectInd_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint32_t btConnId;
        ri >> btConnId;
        uint16_t reasonCode;
        ri >> reasonCode;
        uint16_t reasonSupplier;
        ri >> reasonSupplier;
        std::string address;
        ri >> address;
        uint32_t connInfo;
        ri >> connInfo;
        DisconnectInd(gattId, btConnId, reasonCode, reasonSupplier, address, connInfo);
    }
    void _ScanCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        ScanCfm(gattId, resultCode, resultSupplier);
    }
    void _AdvertiseCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        AdvertiseCfm(gattId, resultCode, resultSupplier);
    }
    void _RegisterCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        uint16_t context;
        ri >> context;
        RegisterCfm(gattId, resultCode, resultSupplier, context);
    }
    void _UnregisterCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        UnregisterCfm(gattId, resultCode, resultSupplier);
    }
    void _DbAllocCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        uint16_t start;
        ri >> start;
        uint16_t end;
        ri >> end;
        uint16_t preferredStartHandle;
        ri >> preferredStartHandle;
        DbAllocCfm(gattId, resultCode, resultSupplier, start, end, preferredStartHandle);
    }
    void _DbDeallocCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        uint16_t start;
        ri >> start;
        uint16_t end;
        ri >> end;
        DbDeallocCfm(gattId, resultCode, resultSupplier, start, end);
    }
    void _DbAddCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        DbAddCfm(gattId, resultCode, resultSupplier);
    }
    void _DbRemoveCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        uint16_t numOfAttr;
        ri >> numOfAttr;
        DbRemoveCfm(gattId, resultCode, resultSupplier, numOfAttr);
    }
    void _DbAccessReadInd_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint32_t btConnId;
        ri >> btConnId;
        uint16_t attrHandle;
        ri >> attrHandle;
        uint16_t offset;
        ri >> offset;
        uint16_t maxRspValueLength;
        ri >> maxRspValueLength;
        uint16_t check;
        ri >> check;
        uint32_t connInfo;
        ri >> connInfo;
        std::string address;
        ri >> address;
        DbAccessReadInd(gattId, btConnId, attrHandle, offset, maxRspValueLength, check, connInfo, address);
    }
    void _DbAccessWriteInd_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint32_t btConnId;
        ri >> btConnId;
        uint16_t check;
        ri >> check;
        uint32_t connInfo;
        ri >> connInfo;
        std::string address;
        ri >> address;
        std::vector< ::DBus::Struct< uint16_t, std::vector< uint8_t > > > writeUnit;
        ri >> writeUnit;
        uint16_t attrHandle;
        ri >> attrHandle;
        DbAccessWriteInd(gattId, btConnId, check, connInfo, address, writeUnit, attrHandle);
    }
    void _DbAccessCompleteInd_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint32_t btConnId;
        ri >> btConnId;
        uint32_t connInfo;
        ri >> connInfo;
        std::string address;
        ri >> address;
        uint16_t attrHandle;
        ri >> attrHandle;
        bool commit;
        ri >> commit;
        DbAccessCompleteInd(gattId, btConnId, connInfo, address, attrHandle, commit);
    }
    void _EventSendCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        uint32_t btConnId;
        ri >> btConnId;
        EventSendCfm(gattId, resultCode, resultSupplier, btConnId);
    }
    void _MtuChangedInd_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint32_t btConnId;
        ri >> btConnId;
        uint16_t mtu;
        ri >> mtu;
        MtuChangedInd(gattId, btConnId, mtu);
    }
    void _DiscoverServicesInd_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint32_t btConnId;
        ri >> btConnId;
        uint16_t startHandle;
        ri >> startHandle;
        uint16_t endHandle;
        ri >> endHandle;
        std::vector< uint8_t > uuid;
        ri >> uuid;
        DiscoverServicesInd(gattId, btConnId, startHandle, endHandle, uuid);
    }
    void _DiscoverServicesCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        uint32_t btConnId;
        ri >> btConnId;
        DiscoverServicesCfm(gattId, resultCode, resultSupplier, btConnId);
    }
    void _FindInclServicesInd_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint32_t btConnId;
        ri >> btConnId;
        uint16_t attrHandle;
        ri >> attrHandle;
        uint16_t startHandle;
        ri >> startHandle;
        uint16_t endGroupHandle;
        ri >> endGroupHandle;
        std::vector< uint8_t > uuid;
        ri >> uuid;
        FindInclServicesInd(gattId, btConnId, attrHandle, startHandle, endGroupHandle, uuid);
    }
    void _FindInclServicesCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        uint32_t btConnId;
        ri >> btConnId;
        FindInclServicesCfm(gattId, resultCode, resultSupplier, btConnId);
    }
    void _DiscoverCharacInd_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint32_t btConnId;
        ri >> btConnId;
        uint16_t declarationHandle;
        ri >> declarationHandle;
        uint8_t property;
        ri >> property;
        std::vector< uint8_t > uuid;
        ri >> uuid;
        uint16_t valueHandle;
        ri >> valueHandle;
        DiscoverCharacInd(gattId, btConnId, declarationHandle, property, uuid, valueHandle);
    }
    void _DiscoverCharacCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        uint32_t btConnId;
        ri >> btConnId;
        DiscoverCharacCfm(gattId, resultCode, resultSupplier, btConnId);
    }
    void _DiscoverCharacDescriptorsInd_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint32_t btConnId;
        ri >> btConnId;
        std::vector< uint8_t > uuid;
        ri >> uuid;
        uint16_t descriptorHandle;
        ri >> descriptorHandle;
        DiscoverCharacDescriptorsInd(gattId, btConnId, uuid, descriptorHandle);
    }
    void _DiscoverCharacDescriptorsCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        uint32_t btConnId;
        ri >> btConnId;
        DiscoverCharacDescriptorsCfm(gattId, resultCode, resultSupplier, btConnId);
    }
    void _ReadCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        uint32_t btConnId;
        ri >> btConnId;
        std::vector< uint8_t > value;
        ri >> value;
        ReadCfm(gattId, resultCode, resultSupplier, btConnId, value);
    }
    void _ReadExtendedPropertiesCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        uint32_t btConnId;
        ri >> btConnId;
        uint16_t extProperties;
        ri >> extProperties;
        ReadExtendedPropertiesCfm(gattId, resultCode, resultSupplier, btConnId, extProperties);
    }
    void _ReadUserDescriptionCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        uint32_t btConnId;
        ri >> btConnId;
        std::string usrDescription;
        ri >> usrDescription;
        ReadUserDescriptionCfm(gattId, resultCode, resultSupplier, btConnId, usrDescription);
    }
    void _ReadClientConfigurationCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        uint32_t btConnId;
        ri >> btConnId;
        uint16_t configuration;
        ri >> configuration;
        ReadClientConfigurationCfm(gattId, resultCode, resultSupplier, btConnId, configuration);
    }
    void _ReadServerConfigurationCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        uint32_t btConnId;
        ri >> btConnId;
        uint16_t configuration;
        ri >> configuration;
        ReadServerConfigurationCfm(gattId, resultCode, resultSupplier, btConnId, configuration);
    }
    void _ReadPresentationFormatCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        uint32_t btConnId;
        ri >> btConnId;
        uint8_t format;
        ri >> format;
        uint8_t exponent;
        ri >> exponent;
        uint16_t unit;
        ri >> unit;
        uint8_t nameSpace;
        ri >> nameSpace;
        uint16_t description;
        ri >> description;
        ReadPresentationFormatCfm(gattId, resultCode, resultSupplier, btConnId, format, exponent, unit, nameSpace, description);
    }
    void _ReadAggregateFormatCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        uint32_t btConnId;
        ri >> btConnId;
        std::vector< uint16_t > handles;
        ri >> handles;
        ReadAggregateFormatCfm(gattId, resultCode, resultSupplier, btConnId, handles);
    }
    void _ReadProfileDefinedDescriptorCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        uint32_t btConnId;
        ri >> btConnId;
        std::vector< uint8_t > value;
        ri >> value;
        ReadProfileDefinedDescriptorCfm(gattId, resultCode, resultSupplier, btConnId, value);
    }
    void _ReadMultiCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        uint32_t btConnId;
        ri >> btConnId;
        std::vector< uint8_t > value;
        ri >> value;
        ReadMultiCfm(gattId, resultCode, resultSupplier, btConnId, value);
    }
    void _ReadByUuidInd_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint32_t btConnId;
        ri >> btConnId;
        uint16_t valueHandle;
        ri >> valueHandle;
        std::vector< uint8_t > value;
        ri >> value;
        ReadByUuidInd(gattId, btConnId, valueHandle, value);
    }
    void _ReadByUuidCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        uint32_t btConnId;
        ri >> btConnId;
        ReadByUuidCfm(gattId, resultCode, resultSupplier, btConnId);
    }
    void _WriteCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        uint32_t btConnId;
        ri >> btConnId;
        WriteCfm(gattId, resultCode, resultSupplier, btConnId);
    }
    void _NotificationInd_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint32_t btConnId;
        ri >> btConnId;
        std::string address;
        ri >> address;
        uint16_t valueHandle;
        ri >> valueHandle;
        std::vector< uint8_t > value;
        ri >> value;
        uint32_t connInfo;
        ri >> connInfo;
        NotificationInd(gattId, btConnId, address, valueHandle, value, connInfo);
    }
    void _ParamScanCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        ParamScanCfm(gattId, resultCode, resultSupplier);
    }
    void _ParamAdvertiseCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        ParamAdvertiseCfm(gattId, resultCode, resultSupplier);
    }
    void _ParamConnectionCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        ParamConnectionCfm(gattId, resultCode, resultSupplier);
    }
    void _ParamConnUpdateCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        uint32_t btConnId;
        ri >> btConnId;
        ParamConnUpdateCfm(gattId, resultCode, resultSupplier, btConnId);
    }
    void _WhitelistAddCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        WhitelistAddCfm(gattId, resultCode, resultSupplier);
    }
    void _WhitelistClearCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        WhitelistClearCfm(gattId, resultCode, resultSupplier);
    }
    void _WhitelistReadCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        std::vector< std::string > address;
        ri >> address;
        WhitelistReadCfm(gattId, address);
    }
    void _ServiceChangedInd_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        std::string address;
        ri >> address;
        uint16_t startHandle;
        ri >> startHandle;
        uint16_t endHandle;
        ri >> endHandle;
        uint32_t connInfo;
        ri >> connInfo;
        ServiceChangedInd(gattId, address, startHandle, endHandle, connInfo);
    }
    void _SubscriptionCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        SubscriptionCfm(gattId, resultCode, resultSupplier);
    }
    void _SetEventMaskCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        SetEventMaskCfm(gattId, resultCode, resultSupplier);
    }
    void _PhysicalLinkStatusInd_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        std::string address;
        ri >> address;
        uint32_t connInfo;
        ri >> connInfo;
        bool status;
        ri >> status;
        PhysicalLinkStatusInd(gattId, address, connInfo, status);
    }
    void _WhitelistChangeInd_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        WhitelistChangeInd(gattId);
    }
    void _ReportInd_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint8_t eventType;
        ri >> eventType;
        std::string address;
        ri >> address;
        std::string permanentAddress;
        ri >> permanentAddress;
        std::vector< uint8_t > data;
        ri >> data;
        int16_t rssi;
        ri >> rssi;
        ReportInd(gattId, eventType, address, permanentAddress, data, rssi);
    }
    void _SecurityCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        uint32_t btConnId;
        ri >> btConnId;
        SecurityCfm(gattId, resultCode, resultSupplier, btConnId);
    }
};

} } } } 
#endif //__dbusxx__gatt_h__PROXY_MARSHAL_H
