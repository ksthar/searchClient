
/*
 *	This file was automatically generated by dbusxx-xml2cpp; DO NOT EDIT!
 */

#ifndef __dbusxx__glue_gatt_proxy_glue_h__PROXY_MARSHAL_H
#define __dbusxx__glue_gatt_proxy_glue_h__PROXY_MARSHAL_H

#include <dbus-c++/dbus.h>
#include <cassert>

namespace com {
namespace bluegiga {
namespace v2 {
namespace bt {

class gatt_proxy
: public ::DBus::InterfaceProxy
{
public:

    gatt_proxy()
    : ::DBus::InterfaceProxy("com.bluegiga.v2.bt.gatt")
    {
        connect_signal(gatt_proxy, CentralCfm, _CentralCfm_stub);
        connect_signal(gatt_proxy, RegisterCfm, _RegisterCfm_stub);
        connect_signal(gatt_proxy, UnregisterCfm, _UnregisterCfm_stub);
    }

public:

    /* properties exported by this interface */
public:

    /* methods exported by this interface,
     * this functions will invoke the corresponding methods on the remote objects
     */
    void CentralReq(const uint32_t& gattId, const std::string& address, const uint32_t& flags, const uint16_t& preferredMtu)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        wi << address;
        wi << flags;
        wi << preferredMtu;
        call.member("CentralReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void RegisterReq(const uint16_t& context)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << context;
        call.member("RegisterReq");
        ::DBus::Message ret = invoke_method (call);
    }

    void UnregisterReq(const uint32_t& gattId)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << gattId;
        call.member("UnregisterReq");
        ::DBus::Message ret = invoke_method (call);
    }


public:

    /* signal handlers for this interface
     */
    virtual void CentralCfm(const uint32_t& gattId, const uint32_t& btConnId, const uint16_t& resultCode, const uint16_t& resultSupplier) = 0;
    virtual void RegisterCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier, const uint16_t& context) = 0;
    virtual void UnregisterCfm(const uint32_t& gattId, const uint16_t& resultCode, const uint16_t& resultSupplier) = 0;

private:

    /* unmarshalers (to unpack the DBus message before calling the actual signal handler)
     */
    void _CentralCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint32_t btConnId;
        ri >> btConnId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        CentralCfm(gattId, btConnId, resultCode, resultSupplier);
    }
    void _RegisterCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        uint16_t context;
        ri >> context;
        RegisterCfm(gattId, resultCode, resultSupplier, context);
    }
    void _UnregisterCfm_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t gattId;
        ri >> gattId;
        uint16_t resultCode;
        ri >> resultCode;
        uint16_t resultSupplier;
        ri >> resultSupplier;
        UnregisterCfm(gattId, resultCode, resultSupplier);
    }
};

} } } } 
#endif //__dbusxx__glue_gatt_proxy_glue_h__PROXY_MARSHAL_H
